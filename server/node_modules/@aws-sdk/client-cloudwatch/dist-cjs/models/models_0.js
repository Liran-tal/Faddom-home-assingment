"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DisableAlarmActionsInput = exports.DimensionFilter = exports.DescribeInsightRulesOutput = exports.InsightRule = exports.DescribeInsightRulesInput = exports.DescribeAnomalyDetectorsOutput = exports.DescribeAnomalyDetectorsInput = exports.DescribeAlarmsForMetricOutput = exports.DescribeAlarmsForMetricInput = exports.DescribeAlarmsOutput = exports.MetricAlarm = exports.DescribeAlarmsInput = exports.InvalidNextToken = exports.DescribeAlarmHistoryOutput = exports.DescribeAlarmHistoryInput = exports.ScanBy = exports.DeleteMetricStreamOutput = exports.DeleteMetricStreamInput = exports.DeleteInsightRulesOutput = exports.DeleteInsightRulesInput = exports.DeleteDashboardsOutput = exports.DeleteDashboardsInput = exports.ResourceNotFoundException = exports.MissingRequiredParameterException = exports.InvalidParameterValueException = exports.InvalidParameterCombinationException = exports.InternalServiceFault = exports.DeleteAnomalyDetectorOutput = exports.DeleteAnomalyDetectorInput = exports.ResourceNotFound = exports.DeleteAlarmsInput = exports.Datapoint = exports.DashboardNotFoundError = exports.DashboardInvalidInputError = exports.DashboardValidationMessage = exports.DashboardEntry = exports.ConcurrentModificationException = exports.CompositeAlarm = exports.PartialFailure = exports.AnomalyDetectorType = exports.AnomalyDetector = exports.SingleMetricAnomalyDetector = exports.MetricMathAnomalyDetector = exports.MetricDataQuery = exports.MetricStat = exports.Metric = exports.Dimension = exports.AnomalyDetectorConfiguration = exports.Range = exports.AlarmHistoryItem = void 0;
exports.PutMetricDataInput = exports.MetricDatum = exports.StatisticSet = exports.PutMetricAlarmInput = exports.PutInsightRuleOutput = exports.PutInsightRuleInput = exports.PutDashboardOutput = exports.PutDashboardInput = exports.PutCompositeAlarmInput = exports.LimitExceededFault = exports.PutAnomalyDetectorOutput = exports.PutAnomalyDetectorInput = exports.ListTagsForResourceOutput = exports.Tag = exports.ListTagsForResourceInput = exports.ListMetricStreamsOutput = exports.MetricStreamEntry = exports.ListMetricStreamsInput = exports.ListMetricsOutput = exports.ListMetricsInput = exports.RecentlyActive = exports.ListDashboardsOutput = exports.ListDashboardsInput = exports.GetMetricWidgetImageOutput = exports.GetMetricWidgetImageInput = exports.GetMetricStreamOutput = exports.MetricStreamOutputFormat = exports.MetricStreamFilter = exports.GetMetricStreamInput = exports.GetMetricStatisticsOutput = exports.GetMetricStatisticsInput = exports.GetMetricDataOutput = exports.MetricDataResult = exports.StatusCode = exports.MessageData = exports.GetMetricDataInput = exports.LabelOptions = exports.GetInsightRuleReportOutput = exports.InsightRuleMetricDatapoint = exports.InsightRuleContributor = exports.InsightRuleContributorDatapoint = exports.GetInsightRuleReportInput = exports.GetDashboardOutput = exports.GetDashboardInput = exports.LimitExceededException = exports.EnableInsightRulesOutput = exports.EnableInsightRulesInput = exports.EnableAlarmActionsInput = exports.DisableInsightRulesOutput = exports.DisableInsightRulesInput = void 0;
exports.UntagResourceOutput = exports.UntagResourceInput = exports.TagResourceOutput = exports.TagResourceInput = exports.StopMetricStreamsOutput = exports.StopMetricStreamsInput = exports.StartMetricStreamsOutput = exports.StartMetricStreamsInput = exports.SetAlarmStateInput = exports.InvalidFormatFault = exports.PutMetricStreamOutput = exports.PutMetricStreamInput = void 0;
const CloudWatchServiceException_1 = require("./CloudWatchServiceException");
var AlarmHistoryItem;
(function (AlarmHistoryItem) {
    AlarmHistoryItem.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(AlarmHistoryItem = exports.AlarmHistoryItem || (exports.AlarmHistoryItem = {}));
var Range;
(function (Range) {
    Range.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Range = exports.Range || (exports.Range = {}));
var AnomalyDetectorConfiguration;
(function (AnomalyDetectorConfiguration) {
    AnomalyDetectorConfiguration.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(AnomalyDetectorConfiguration = exports.AnomalyDetectorConfiguration || (exports.AnomalyDetectorConfiguration = {}));
var Dimension;
(function (Dimension) {
    Dimension.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Dimension = exports.Dimension || (exports.Dimension = {}));
var Metric;
(function (Metric) {
    Metric.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Metric = exports.Metric || (exports.Metric = {}));
var MetricStat;
(function (MetricStat) {
    MetricStat.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(MetricStat = exports.MetricStat || (exports.MetricStat = {}));
var MetricDataQuery;
(function (MetricDataQuery) {
    MetricDataQuery.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(MetricDataQuery = exports.MetricDataQuery || (exports.MetricDataQuery = {}));
var MetricMathAnomalyDetector;
(function (MetricMathAnomalyDetector) {
    MetricMathAnomalyDetector.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(MetricMathAnomalyDetector = exports.MetricMathAnomalyDetector || (exports.MetricMathAnomalyDetector = {}));
var SingleMetricAnomalyDetector;
(function (SingleMetricAnomalyDetector) {
    SingleMetricAnomalyDetector.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(SingleMetricAnomalyDetector = exports.SingleMetricAnomalyDetector || (exports.SingleMetricAnomalyDetector = {}));
var AnomalyDetector;
(function (AnomalyDetector) {
    AnomalyDetector.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(AnomalyDetector = exports.AnomalyDetector || (exports.AnomalyDetector = {}));
var AnomalyDetectorType;
(function (AnomalyDetectorType) {
    AnomalyDetectorType["METRIC_MATH"] = "METRIC_MATH";
    AnomalyDetectorType["SINGLE_METRIC"] = "SINGLE_METRIC";
})(AnomalyDetectorType = exports.AnomalyDetectorType || (exports.AnomalyDetectorType = {}));
var PartialFailure;
(function (PartialFailure) {
    PartialFailure.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PartialFailure = exports.PartialFailure || (exports.PartialFailure = {}));
var CompositeAlarm;
(function (CompositeAlarm) {
    CompositeAlarm.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(CompositeAlarm = exports.CompositeAlarm || (exports.CompositeAlarm = {}));
class ConcurrentModificationException extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "ConcurrentModificationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentModificationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);
        this.Message = opts.Message;
    }
}
exports.ConcurrentModificationException = ConcurrentModificationException;
var DashboardEntry;
(function (DashboardEntry) {
    DashboardEntry.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DashboardEntry = exports.DashboardEntry || (exports.DashboardEntry = {}));
var DashboardValidationMessage;
(function (DashboardValidationMessage) {
    DashboardValidationMessage.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DashboardValidationMessage = exports.DashboardValidationMessage || (exports.DashboardValidationMessage = {}));
class DashboardInvalidInputError extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "DashboardInvalidInputError",
            $fault: "client",
            ...opts,
        });
        this.name = "DashboardInvalidInputError";
        this.$fault = "client";
        Object.setPrototypeOf(this, DashboardInvalidInputError.prototype);
        this.dashboardValidationMessages = opts.dashboardValidationMessages;
    }
}
exports.DashboardInvalidInputError = DashboardInvalidInputError;
class DashboardNotFoundError extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "DashboardNotFoundError",
            $fault: "client",
            ...opts,
        });
        this.name = "DashboardNotFoundError";
        this.$fault = "client";
        Object.setPrototypeOf(this, DashboardNotFoundError.prototype);
    }
}
exports.DashboardNotFoundError = DashboardNotFoundError;
var Datapoint;
(function (Datapoint) {
    Datapoint.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Datapoint = exports.Datapoint || (exports.Datapoint = {}));
var DeleteAlarmsInput;
(function (DeleteAlarmsInput) {
    DeleteAlarmsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteAlarmsInput = exports.DeleteAlarmsInput || (exports.DeleteAlarmsInput = {}));
class ResourceNotFound extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFound",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFound";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFound.prototype);
    }
}
exports.ResourceNotFound = ResourceNotFound;
var DeleteAnomalyDetectorInput;
(function (DeleteAnomalyDetectorInput) {
    DeleteAnomalyDetectorInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteAnomalyDetectorInput = exports.DeleteAnomalyDetectorInput || (exports.DeleteAnomalyDetectorInput = {}));
var DeleteAnomalyDetectorOutput;
(function (DeleteAnomalyDetectorOutput) {
    DeleteAnomalyDetectorOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteAnomalyDetectorOutput = exports.DeleteAnomalyDetectorOutput || (exports.DeleteAnomalyDetectorOutput = {}));
class InternalServiceFault extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "InternalServiceFault",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServiceFault";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServiceFault.prototype);
        this.Message = opts.Message;
    }
}
exports.InternalServiceFault = InternalServiceFault;
class InvalidParameterCombinationException extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "InvalidParameterCombinationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterCombinationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterCombinationException.prototype);
    }
}
exports.InvalidParameterCombinationException = InvalidParameterCombinationException;
class InvalidParameterValueException extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "InvalidParameterValueException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterValueException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterValueException.prototype);
    }
}
exports.InvalidParameterValueException = InvalidParameterValueException;
class MissingRequiredParameterException extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "MissingRequiredParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "MissingRequiredParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MissingRequiredParameterException.prototype);
    }
}
exports.MissingRequiredParameterException = MissingRequiredParameterException;
class ResourceNotFoundException extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.ResourceType = opts.ResourceType;
        this.ResourceId = opts.ResourceId;
        this.Message = opts.Message;
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
var DeleteDashboardsInput;
(function (DeleteDashboardsInput) {
    DeleteDashboardsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteDashboardsInput = exports.DeleteDashboardsInput || (exports.DeleteDashboardsInput = {}));
var DeleteDashboardsOutput;
(function (DeleteDashboardsOutput) {
    DeleteDashboardsOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteDashboardsOutput = exports.DeleteDashboardsOutput || (exports.DeleteDashboardsOutput = {}));
var DeleteInsightRulesInput;
(function (DeleteInsightRulesInput) {
    DeleteInsightRulesInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteInsightRulesInput = exports.DeleteInsightRulesInput || (exports.DeleteInsightRulesInput = {}));
var DeleteInsightRulesOutput;
(function (DeleteInsightRulesOutput) {
    DeleteInsightRulesOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteInsightRulesOutput = exports.DeleteInsightRulesOutput || (exports.DeleteInsightRulesOutput = {}));
var DeleteMetricStreamInput;
(function (DeleteMetricStreamInput) {
    DeleteMetricStreamInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteMetricStreamInput = exports.DeleteMetricStreamInput || (exports.DeleteMetricStreamInput = {}));
var DeleteMetricStreamOutput;
(function (DeleteMetricStreamOutput) {
    DeleteMetricStreamOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DeleteMetricStreamOutput = exports.DeleteMetricStreamOutput || (exports.DeleteMetricStreamOutput = {}));
var ScanBy;
(function (ScanBy) {
    ScanBy["TIMESTAMP_ASCENDING"] = "TimestampAscending";
    ScanBy["TIMESTAMP_DESCENDING"] = "TimestampDescending";
})(ScanBy = exports.ScanBy || (exports.ScanBy = {}));
var DescribeAlarmHistoryInput;
(function (DescribeAlarmHistoryInput) {
    DescribeAlarmHistoryInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeAlarmHistoryInput = exports.DescribeAlarmHistoryInput || (exports.DescribeAlarmHistoryInput = {}));
var DescribeAlarmHistoryOutput;
(function (DescribeAlarmHistoryOutput) {
    DescribeAlarmHistoryOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeAlarmHistoryOutput = exports.DescribeAlarmHistoryOutput || (exports.DescribeAlarmHistoryOutput = {}));
class InvalidNextToken extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "InvalidNextToken",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNextToken";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNextToken.prototype);
    }
}
exports.InvalidNextToken = InvalidNextToken;
var DescribeAlarmsInput;
(function (DescribeAlarmsInput) {
    DescribeAlarmsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeAlarmsInput = exports.DescribeAlarmsInput || (exports.DescribeAlarmsInput = {}));
var MetricAlarm;
(function (MetricAlarm) {
    MetricAlarm.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(MetricAlarm = exports.MetricAlarm || (exports.MetricAlarm = {}));
var DescribeAlarmsOutput;
(function (DescribeAlarmsOutput) {
    DescribeAlarmsOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeAlarmsOutput = exports.DescribeAlarmsOutput || (exports.DescribeAlarmsOutput = {}));
var DescribeAlarmsForMetricInput;
(function (DescribeAlarmsForMetricInput) {
    DescribeAlarmsForMetricInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeAlarmsForMetricInput = exports.DescribeAlarmsForMetricInput || (exports.DescribeAlarmsForMetricInput = {}));
var DescribeAlarmsForMetricOutput;
(function (DescribeAlarmsForMetricOutput) {
    DescribeAlarmsForMetricOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeAlarmsForMetricOutput = exports.DescribeAlarmsForMetricOutput || (exports.DescribeAlarmsForMetricOutput = {}));
var DescribeAnomalyDetectorsInput;
(function (DescribeAnomalyDetectorsInput) {
    DescribeAnomalyDetectorsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeAnomalyDetectorsInput = exports.DescribeAnomalyDetectorsInput || (exports.DescribeAnomalyDetectorsInput = {}));
var DescribeAnomalyDetectorsOutput;
(function (DescribeAnomalyDetectorsOutput) {
    DescribeAnomalyDetectorsOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeAnomalyDetectorsOutput = exports.DescribeAnomalyDetectorsOutput || (exports.DescribeAnomalyDetectorsOutput = {}));
var DescribeInsightRulesInput;
(function (DescribeInsightRulesInput) {
    DescribeInsightRulesInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeInsightRulesInput = exports.DescribeInsightRulesInput || (exports.DescribeInsightRulesInput = {}));
var InsightRule;
(function (InsightRule) {
    InsightRule.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(InsightRule = exports.InsightRule || (exports.InsightRule = {}));
var DescribeInsightRulesOutput;
(function (DescribeInsightRulesOutput) {
    DescribeInsightRulesOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DescribeInsightRulesOutput = exports.DescribeInsightRulesOutput || (exports.DescribeInsightRulesOutput = {}));
var DimensionFilter;
(function (DimensionFilter) {
    DimensionFilter.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DimensionFilter = exports.DimensionFilter || (exports.DimensionFilter = {}));
var DisableAlarmActionsInput;
(function (DisableAlarmActionsInput) {
    DisableAlarmActionsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DisableAlarmActionsInput = exports.DisableAlarmActionsInput || (exports.DisableAlarmActionsInput = {}));
var DisableInsightRulesInput;
(function (DisableInsightRulesInput) {
    DisableInsightRulesInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DisableInsightRulesInput = exports.DisableInsightRulesInput || (exports.DisableInsightRulesInput = {}));
var DisableInsightRulesOutput;
(function (DisableInsightRulesOutput) {
    DisableInsightRulesOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(DisableInsightRulesOutput = exports.DisableInsightRulesOutput || (exports.DisableInsightRulesOutput = {}));
var EnableAlarmActionsInput;
(function (EnableAlarmActionsInput) {
    EnableAlarmActionsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(EnableAlarmActionsInput = exports.EnableAlarmActionsInput || (exports.EnableAlarmActionsInput = {}));
var EnableInsightRulesInput;
(function (EnableInsightRulesInput) {
    EnableInsightRulesInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(EnableInsightRulesInput = exports.EnableInsightRulesInput || (exports.EnableInsightRulesInput = {}));
var EnableInsightRulesOutput;
(function (EnableInsightRulesOutput) {
    EnableInsightRulesOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(EnableInsightRulesOutput = exports.EnableInsightRulesOutput || (exports.EnableInsightRulesOutput = {}));
class LimitExceededException extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.Message = opts.Message;
    }
}
exports.LimitExceededException = LimitExceededException;
var GetDashboardInput;
(function (GetDashboardInput) {
    GetDashboardInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetDashboardInput = exports.GetDashboardInput || (exports.GetDashboardInput = {}));
var GetDashboardOutput;
(function (GetDashboardOutput) {
    GetDashboardOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetDashboardOutput = exports.GetDashboardOutput || (exports.GetDashboardOutput = {}));
var GetInsightRuleReportInput;
(function (GetInsightRuleReportInput) {
    GetInsightRuleReportInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetInsightRuleReportInput = exports.GetInsightRuleReportInput || (exports.GetInsightRuleReportInput = {}));
var InsightRuleContributorDatapoint;
(function (InsightRuleContributorDatapoint) {
    InsightRuleContributorDatapoint.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(InsightRuleContributorDatapoint = exports.InsightRuleContributorDatapoint || (exports.InsightRuleContributorDatapoint = {}));
var InsightRuleContributor;
(function (InsightRuleContributor) {
    InsightRuleContributor.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(InsightRuleContributor = exports.InsightRuleContributor || (exports.InsightRuleContributor = {}));
var InsightRuleMetricDatapoint;
(function (InsightRuleMetricDatapoint) {
    InsightRuleMetricDatapoint.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(InsightRuleMetricDatapoint = exports.InsightRuleMetricDatapoint || (exports.InsightRuleMetricDatapoint = {}));
var GetInsightRuleReportOutput;
(function (GetInsightRuleReportOutput) {
    GetInsightRuleReportOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetInsightRuleReportOutput = exports.GetInsightRuleReportOutput || (exports.GetInsightRuleReportOutput = {}));
var LabelOptions;
(function (LabelOptions) {
    LabelOptions.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(LabelOptions = exports.LabelOptions || (exports.LabelOptions = {}));
var GetMetricDataInput;
(function (GetMetricDataInput) {
    GetMetricDataInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetMetricDataInput = exports.GetMetricDataInput || (exports.GetMetricDataInput = {}));
var MessageData;
(function (MessageData) {
    MessageData.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(MessageData = exports.MessageData || (exports.MessageData = {}));
var StatusCode;
(function (StatusCode) {
    StatusCode["COMPLETE"] = "Complete";
    StatusCode["INTERNAL_ERROR"] = "InternalError";
    StatusCode["PARTIAL_DATA"] = "PartialData";
})(StatusCode = exports.StatusCode || (exports.StatusCode = {}));
var MetricDataResult;
(function (MetricDataResult) {
    MetricDataResult.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(MetricDataResult = exports.MetricDataResult || (exports.MetricDataResult = {}));
var GetMetricDataOutput;
(function (GetMetricDataOutput) {
    GetMetricDataOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetMetricDataOutput = exports.GetMetricDataOutput || (exports.GetMetricDataOutput = {}));
var GetMetricStatisticsInput;
(function (GetMetricStatisticsInput) {
    GetMetricStatisticsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetMetricStatisticsInput = exports.GetMetricStatisticsInput || (exports.GetMetricStatisticsInput = {}));
var GetMetricStatisticsOutput;
(function (GetMetricStatisticsOutput) {
    GetMetricStatisticsOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetMetricStatisticsOutput = exports.GetMetricStatisticsOutput || (exports.GetMetricStatisticsOutput = {}));
var GetMetricStreamInput;
(function (GetMetricStreamInput) {
    GetMetricStreamInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetMetricStreamInput = exports.GetMetricStreamInput || (exports.GetMetricStreamInput = {}));
var MetricStreamFilter;
(function (MetricStreamFilter) {
    MetricStreamFilter.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(MetricStreamFilter = exports.MetricStreamFilter || (exports.MetricStreamFilter = {}));
var MetricStreamOutputFormat;
(function (MetricStreamOutputFormat) {
    MetricStreamOutputFormat["JSON"] = "json";
    MetricStreamOutputFormat["OPEN_TELEMETRY_0_7"] = "opentelemetry0.7";
})(MetricStreamOutputFormat = exports.MetricStreamOutputFormat || (exports.MetricStreamOutputFormat = {}));
var GetMetricStreamOutput;
(function (GetMetricStreamOutput) {
    GetMetricStreamOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetMetricStreamOutput = exports.GetMetricStreamOutput || (exports.GetMetricStreamOutput = {}));
var GetMetricWidgetImageInput;
(function (GetMetricWidgetImageInput) {
    GetMetricWidgetImageInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetMetricWidgetImageInput = exports.GetMetricWidgetImageInput || (exports.GetMetricWidgetImageInput = {}));
var GetMetricWidgetImageOutput;
(function (GetMetricWidgetImageOutput) {
    GetMetricWidgetImageOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(GetMetricWidgetImageOutput = exports.GetMetricWidgetImageOutput || (exports.GetMetricWidgetImageOutput = {}));
var ListDashboardsInput;
(function (ListDashboardsInput) {
    ListDashboardsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListDashboardsInput = exports.ListDashboardsInput || (exports.ListDashboardsInput = {}));
var ListDashboardsOutput;
(function (ListDashboardsOutput) {
    ListDashboardsOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListDashboardsOutput = exports.ListDashboardsOutput || (exports.ListDashboardsOutput = {}));
var RecentlyActive;
(function (RecentlyActive) {
    RecentlyActive["PT3H"] = "PT3H";
})(RecentlyActive = exports.RecentlyActive || (exports.RecentlyActive = {}));
var ListMetricsInput;
(function (ListMetricsInput) {
    ListMetricsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListMetricsInput = exports.ListMetricsInput || (exports.ListMetricsInput = {}));
var ListMetricsOutput;
(function (ListMetricsOutput) {
    ListMetricsOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListMetricsOutput = exports.ListMetricsOutput || (exports.ListMetricsOutput = {}));
var ListMetricStreamsInput;
(function (ListMetricStreamsInput) {
    ListMetricStreamsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListMetricStreamsInput = exports.ListMetricStreamsInput || (exports.ListMetricStreamsInput = {}));
var MetricStreamEntry;
(function (MetricStreamEntry) {
    MetricStreamEntry.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(MetricStreamEntry = exports.MetricStreamEntry || (exports.MetricStreamEntry = {}));
var ListMetricStreamsOutput;
(function (ListMetricStreamsOutput) {
    ListMetricStreamsOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListMetricStreamsOutput = exports.ListMetricStreamsOutput || (exports.ListMetricStreamsOutput = {}));
var ListTagsForResourceInput;
(function (ListTagsForResourceInput) {
    ListTagsForResourceInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListTagsForResourceInput = exports.ListTagsForResourceInput || (exports.ListTagsForResourceInput = {}));
var Tag;
(function (Tag) {
    Tag.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(Tag = exports.Tag || (exports.Tag = {}));
var ListTagsForResourceOutput;
(function (ListTagsForResourceOutput) {
    ListTagsForResourceOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(ListTagsForResourceOutput = exports.ListTagsForResourceOutput || (exports.ListTagsForResourceOutput = {}));
var PutAnomalyDetectorInput;
(function (PutAnomalyDetectorInput) {
    PutAnomalyDetectorInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutAnomalyDetectorInput = exports.PutAnomalyDetectorInput || (exports.PutAnomalyDetectorInput = {}));
var PutAnomalyDetectorOutput;
(function (PutAnomalyDetectorOutput) {
    PutAnomalyDetectorOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutAnomalyDetectorOutput = exports.PutAnomalyDetectorOutput || (exports.PutAnomalyDetectorOutput = {}));
class LimitExceededFault extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededFault.prototype);
    }
}
exports.LimitExceededFault = LimitExceededFault;
var PutCompositeAlarmInput;
(function (PutCompositeAlarmInput) {
    PutCompositeAlarmInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutCompositeAlarmInput = exports.PutCompositeAlarmInput || (exports.PutCompositeAlarmInput = {}));
var PutDashboardInput;
(function (PutDashboardInput) {
    PutDashboardInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutDashboardInput = exports.PutDashboardInput || (exports.PutDashboardInput = {}));
var PutDashboardOutput;
(function (PutDashboardOutput) {
    PutDashboardOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutDashboardOutput = exports.PutDashboardOutput || (exports.PutDashboardOutput = {}));
var PutInsightRuleInput;
(function (PutInsightRuleInput) {
    PutInsightRuleInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutInsightRuleInput = exports.PutInsightRuleInput || (exports.PutInsightRuleInput = {}));
var PutInsightRuleOutput;
(function (PutInsightRuleOutput) {
    PutInsightRuleOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutInsightRuleOutput = exports.PutInsightRuleOutput || (exports.PutInsightRuleOutput = {}));
var PutMetricAlarmInput;
(function (PutMetricAlarmInput) {
    PutMetricAlarmInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutMetricAlarmInput = exports.PutMetricAlarmInput || (exports.PutMetricAlarmInput = {}));
var StatisticSet;
(function (StatisticSet) {
    StatisticSet.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(StatisticSet = exports.StatisticSet || (exports.StatisticSet = {}));
var MetricDatum;
(function (MetricDatum) {
    MetricDatum.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(MetricDatum = exports.MetricDatum || (exports.MetricDatum = {}));
var PutMetricDataInput;
(function (PutMetricDataInput) {
    PutMetricDataInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutMetricDataInput = exports.PutMetricDataInput || (exports.PutMetricDataInput = {}));
var PutMetricStreamInput;
(function (PutMetricStreamInput) {
    PutMetricStreamInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutMetricStreamInput = exports.PutMetricStreamInput || (exports.PutMetricStreamInput = {}));
var PutMetricStreamOutput;
(function (PutMetricStreamOutput) {
    PutMetricStreamOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(PutMetricStreamOutput = exports.PutMetricStreamOutput || (exports.PutMetricStreamOutput = {}));
class InvalidFormatFault extends CloudWatchServiceException_1.CloudWatchServiceException {
    constructor(opts) {
        super({
            name: "InvalidFormatFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidFormatFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidFormatFault.prototype);
    }
}
exports.InvalidFormatFault = InvalidFormatFault;
var SetAlarmStateInput;
(function (SetAlarmStateInput) {
    SetAlarmStateInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(SetAlarmStateInput = exports.SetAlarmStateInput || (exports.SetAlarmStateInput = {}));
var StartMetricStreamsInput;
(function (StartMetricStreamsInput) {
    StartMetricStreamsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(StartMetricStreamsInput = exports.StartMetricStreamsInput || (exports.StartMetricStreamsInput = {}));
var StartMetricStreamsOutput;
(function (StartMetricStreamsOutput) {
    StartMetricStreamsOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(StartMetricStreamsOutput = exports.StartMetricStreamsOutput || (exports.StartMetricStreamsOutput = {}));
var StopMetricStreamsInput;
(function (StopMetricStreamsInput) {
    StopMetricStreamsInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(StopMetricStreamsInput = exports.StopMetricStreamsInput || (exports.StopMetricStreamsInput = {}));
var StopMetricStreamsOutput;
(function (StopMetricStreamsOutput) {
    StopMetricStreamsOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(StopMetricStreamsOutput = exports.StopMetricStreamsOutput || (exports.StopMetricStreamsOutput = {}));
var TagResourceInput;
(function (TagResourceInput) {
    TagResourceInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(TagResourceInput = exports.TagResourceInput || (exports.TagResourceInput = {}));
var TagResourceOutput;
(function (TagResourceOutput) {
    TagResourceOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(TagResourceOutput = exports.TagResourceOutput || (exports.TagResourceOutput = {}));
var UntagResourceInput;
(function (UntagResourceInput) {
    UntagResourceInput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(UntagResourceInput = exports.UntagResourceInput || (exports.UntagResourceInput = {}));
var UntagResourceOutput;
(function (UntagResourceOutput) {
    UntagResourceOutput.filterSensitiveLog = (obj) => ({
        ...obj,
    });
})(UntagResourceOutput = exports.UntagResourceOutput || (exports.UntagResourceOutput = {}));
